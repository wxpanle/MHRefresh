//
//  QYElevenTKnowdege.h
//  MHRefresh
//
//  Created by panle on 2018/5/11.
//  Copyright © 2018年 developer. All rights reserved.
//

#import <Foundation/Foundation.h>

@interface QYElevenTKnowdege : NSObject
@end

/**
 基于定时器的动画
 
 */

/**
 11.0 定时帧
 
 动画看起来是用来显示一段连续的运动过程，但实际上当在固定位置上展示像素的时候并不能做到这一点，一般来说这种显示都无法做到连续的移动，能做的仅仅是足够快的展示一些列静态图片，只是看起来像是做了运动
 
 11.0.1 NSTimer
 
 iOS 每个线程都管理了一个NSRunLoop,通过一个循环来完成一些任务列表，但是对主线程，这些任务包含  处理触摸事件，发送和接受网络数据包，执行使用gcd的代码  处理计时器行为  屏幕重绘
 
 当你设置一个NSTimer 他会被插到当前任务列表中，然后直到指定时间过去后才会被执行，但是何时启动定时器并没有一个时间上限，而且它只会在一个列表中上一个任务完成之后开始执行，这通常会导致有几毫秒的延迟，但是如果上一个任务过了很久才完成就会导致延迟很长一段时间。
 
 屏幕绘制的频率是每分钟60次，但是和定时器行为一样，如果列表中上一个执行了很长时间，它也会延迟。这些延迟都是一个随机值，于是就不能保证定时器精准的一秒钟执行60次。有时候发生在屏幕重绘之后，这就会使得更新屏幕会有个延迟，看起来就是动画卡壳了   有时候定时器会在屏幕更新的时候执行两次，于是动画开起来就跳动了。
 
 我们可以用CADisplayLink 让更新频率严格控制在每次屏幕刷新之后。
 基于真实帧的持续时间而不是假设的更新频率来做动画
 调整动画计时器的runloop模式，这样就不会被别的事干扰。
 
 11.0.2 CADisplayLink
 
 这是一个类似NSTimer的类，它总是在屏幕完成一次更新之前启动，它的接口设计和NSTimer很类似，所以实际上就是一个内置实现的替代，但是和timeInterval以秒为单位不同，CADisplayLink有一个整形的frameInterval属性，指定了间隔多少帧之后才执行。默认值为1，意味着每次屏幕更新之前都会执行一次。但是如果动画的代码执行起来超过了六十分之一秒，你可以指定frameInterval为2，就是说动画每隔一帧执行一次或者3次，也就是一秒钟20次等等。
 
 这个类可以保证帧率足够连续，使得动画看起来更加平滑，但也不能保证每一帧都按计划进行，一些失去控制的离散的任务或者事件可能会导致动画偶尔的丢帧，当使用NSTimer的时候，一旦有机会计时器就会开启，但是它不同，如果它丢失了帧，就会忽略它们，然后在下一次更新的时候接着运行。
 
 
 11.0.3 计算帧的持续时间
 
 以上我们仍然需要处理一帧的时间超出了预期的六十分之一秒，由于我们不能够计算出一帧的真实的持续时间，所以需要手动测量。我们可以在每帧开始刷新的时候记录当前时间，然后和上一阵记录的时间去比较。
 
 通过比较这些时间  我们就可以得到真实的每帧持续的时间，然后代替硬编码的六十分之一秒
 
 
 11.0.4 Run Loop  模式
 
 我们创建CADisplayLink的时候，我们需要制定一个runloop 和runloop,对于run loop 来说， 我们就使用了主线程的eunloop，因为任何用户界面的更新都需要在主线程执行，但是模式的选择就并不那么清楚了。每个添加到run loop的任务都有一个指定了优先级的模式，为了保护用户界面保持平滑，iOS会提供和用户界面相关任务的优先级，而且当UI很活跃的时候的确会暂停一些别的任务
 
 一个典型的例子就是当用UIScrollView滑动的时候，重绘滚动试图的内容回避别的任务优先级更高，所以标准的NSTimer的万国请求就不会启动
 
 NSDefaultRunLoopMode  标准优先级
 NSRunLoopCommonModes  高优先级
 UITrackingRunLoopMode 用于UIScrollView和别的控件的动画
 */


/**
 11.1.1  物理模拟
 
 在关键帧的实现中 我们提前计算了所有帧，但是在新的解决方案中，我们事假上是在按需要计算。意义在于我们可以根据用户输入实时修改动画的逻辑，或者和别的实时动画系统例如物理引擎进行整合。
 
 11.1.2 Chipmunk
 
 6666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666
 */
